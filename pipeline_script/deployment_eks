pipeline {
    agent any

    parameters {
        string(name: 'AWS_REGION', defaultValue: 'us-east-1', description: 'Enter your AWS region')
        string(name: 'AWS_ACCOUNT_ID', defaultValue: '123456789000', description: 'Enter your AWS account ID')
        string(name: 'ECR_REPO_NAME', defaultValue: 'amazon-prime', description: 'Enter repository name')
        string(name: 'VERSION', defaultValue: 'latest', description: 'Enter version number')
        string(name: 'CLUSTER_NAME', defaultValue: 'devops-project-cluster', description: 'Enter your EKS cluster name')
    }

    stages {
        stage("Clone GitHub Repository") {
            steps {
                // Clone the repository containing deployment and service files
                git branch: 'main', url: 'https://github.com/amazon1/DevopsProject2.git'
            }
        }
		
        stage("Login to EKS") {
            steps {
                script {
                    withCredentials([string(credentialsId: 'access-key', variable: 'AWS_ACCESS_KEY'),
                                     string(credentialsId: 'secret-key', variable: 'AWS_SECRET_KEY')]) {
                        // Update kubeconfig
                        sh "aws eks --region ${params.AWS_REGION} update-kubeconfig --name ${params.CLUSTER_NAME}"
                        
                    }
                }
            }
        }

		
      stage ("Select Image Version") {
            steps {
                script {
                        def ECR_IMAGE_NAME = "${params.AWS_ACCOUNT_ID}.dkr.ecr.${params.AWS_REGION}.amazonaws.com/${params.ECR_REPO_NAME}:${params.VERSION}"
                        sh "sed -i 's|image: .*|image: ${ECR_IMAGE_NAME}|' k8s_files/deployment.yaml"
                }	
            }
        }		

        // ----------------------------------------------------
	// USE THIS STAGE TO DEPLOY IMAGE AS PER THE VERSION NO
        // ----------------------------------------------------
        stage("Deploy to EKS") {
            steps {
                script {
                        // Apply the deployment and service files
                        sh "kubectl apply -f k8s_files/deployment.yaml"
                        sh "kubectl apply -f k8s_files/service.yaml"
                }
            }
        }
    }
}
